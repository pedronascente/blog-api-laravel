<?php

use Illuminate\Foundation\Application;
use Illuminate\Foundation\Configuration\Exceptions;
use Illuminate\Foundation\Configuration\Middleware;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException;
use Illuminate\Database\Eloquent\ModelNotFoundException;

return Application::configure(basePath: dirname(__DIR__))
    ->withRouting(
        web: __DIR__.'/../routes/web.php',
        api: __DIR__.'/../routes/api.php',
        commands: __DIR__.'/../routes/console.php',
        health: '/up',
    )
    ->withMiddleware(function (Middleware $middleware): void {
        //
    })
    ->withExceptions(function (Exceptions $exceptions): void {

        // ğŸ”¹ 404 - Rota nÃ£o encontrada
        $exceptions->render(function (NotFoundHttpException $e, $request) {
            if ($request->is('api/*')) {
                return response()->json([
                    'success' => false,
                    'message' => 'Rota nÃ£o encontrada.'
                ], 404);
            }
        });

        // ğŸ”¹ 404 - Model nÃ£o encontrada (ex: findOrFail)
        $exceptions->render(function (ModelNotFoundException $e, $request) {
            if ($request->is('api/*')) {
                return response()->json([
                    'success' => false,
                    'message' => 'Recurso nÃ£o encontrado.'
                ], 404);
            }
        });

        // ğŸ”¹ 405 - MÃ©todo HTTP nÃ£o permitido
        $exceptions->render(function (MethodNotAllowedHttpException $e, $request) {
            if ($request->is('api/*')) {
                return response()->json([
                    'success' => false,
                    'message' => 'MÃ©todo HTTP nÃ£o permitido nesta rota.'
                ], 405);
            }
        });

        // ğŸ”¹ 500 - Erro interno do servidor
        $exceptions->render(function (Throwable $e, $request) {
            if ($request->is('api/*')) {
                return response()->json([
                    'success' => false,
                    'message' => 'Erro interno no servidor.',
                    'error' => config('app.debug') ? $e->getMessage() : null
                ], 500);
            }
        });

    })
    ->create();
